/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // Ref: https://zmkfirmware.dev/docs/codes/
            // ---  MAIN  -----------------------------------------------------------------------------------------------------------------------
            // |    ESC    |     1     |     2     |     3      |      4      |      5     |                           |      6      |      7     |      8      |      9     |     0    |    BSPC    | |    -/_    |     =/+     |    GRAVE    |
            // |    TAB    |     Q     |     W     |     E      |      R      |      T     |                           |      Y      |      U     |      I      |      O     |     P    |    DEL     | |     \     |      [      |      ]      |
            // |   LCTRL   |     A     |     S     |     D      |      F      |      G     |                           |      H      |      J     |      K      |      L     |     ;    |     '      | |           |      UP     |             |
            // |   SHIFT   |     Z     |     X     |     C      |      V      |      B     |                           |      N      |      M     |      ,      |      .     |     /    |   RSHIFT   | |     L     |      DN     |      R      |
            //                                     |   NUMPAD   |     LALT    |    LCMD    |   SPACE    |  |   ENTER   |   FUNCTION  |  MACOS APP |  MACOS LANG |

            bindings = <
&kp ESC    &hold_tap LS(N1) N1  &hold_tap LS(N2) N2  &hold_tap LS(N3) N3  &hold_tap LS(N4) N4  &hold_tap LS(N5) N5  &hold_tap LS(N6) N6  &hold_tap LS(N7) N7  &hold_tap LS(N8) N8        &hold_tap LS(N9) N9    &hold_tap LS(N0) N0           &hold_tap LS(EQUAL) EQUAL  &kp INSERT  &kp HOME  &kp PAGE_UP
&kp TAB    &hold_tap LS(Q) Q    &hold_tap LS(W) W    &hold_tap LS(E) E    &hold_tap LS(R) R    &hold_tap LS(T) T    &hold_tap LS(Y) Y    &hold_tap LS(U) U    &hold_tap LS(I) I          &hold_tap LS(O) O      &hold_tap LS(P) P             &hold_tap LS(MINUS) MINUS  &kp DELETE  &kp END   &kp PAGE_DOWN
&kp CLCK   &hold_tap LS(A) A    &hold_tap LS(S) S    &hold_tap LS(D) D    &hold_tap LS(F) F    &hold_tap LS(G) G    &hold_tap LS(H) H    &hold_tap LS(J) J    &hold_tap LS(K) K          &hold_tap LS(L) L      &hold_tap LS(SEMI) SEMICOLON  &hold_tap LS(SQT) SQT      &kp UP
&kp LSHFT  &hold_tap LS(Z) Z    &hold_tap LS(X) X    &hold_tap LS(C) C    &hold_tap LS(V) V    &hold_tap LS(B) B    &hold_tap LS(N) N    &hold_tap LS(M) M    &hold_tap LS(COMMA) COMMA  &hold_tap LS(DOT) DOT  &hold_tap LS(FSLH) FSLH       &kp BACKSPACE              &kp LEFT    &kp DOWN  &kp RIGHT
&kp LCTRL  &kp LEFT_WIN         &kp LEFT_ALT         &kp SPACE            &kp RET              &kp RIGHT_ALT        &kp RIGHT_SHIFT      &mo 1
            >;
        };

        function_layer {
            // ---  FUNCTION  -------------------------------------------------------------------------------------------------------------------
            // | BT Clear  |  BT Prev  |  BT Next  |            |             |            |                           |             |            |             |            |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |            |     UP      |            |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |    LEFT    |    DOWN     |   RIGHT    |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |    MUTE    |  VOL DOWN   |   VOL UP   |          |            | |           |             |             |
            //                                     |            |             |            |            |  |           |             |            |             |

            bindings = <
&bt BT_CLR  &kp F1  &kp F2   &kp F3  &kp F4  &kp F5  &kp F6  &kp F7      &kp F8        &kp F9        &kp F10  &kp F11  &trans  &trans  &trans
&trans      &trans  &trans   &trans  &trans  &trans  &trans  &trans      &kp UP        &trans        &trans   &trans   &trans  &trans  &trans
&trans      &trans  &kp F12  &trans  &trans  &trans  &trans  &kp LEFT    &kp DOWN      &kp RIGHT     &trans   &trans   &trans
&trans      &trans  &trans   &trans  &trans  &trans  &trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans   &trans   &trans  &trans  &trans
&trans      &trans  &trans   &trans  &trans  &trans  &trans  &trans
            >;
        };

        numpad_layer {
            // ---  NUMPAD  -------------------------------------------------------------------------------------------------------------------
            // |           |           |           |            |             |            |                           |       =       |      /       |      *       |      -     |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |       7       |      8       |      9       |      +     |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |       4       |      5       |      6       |            |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |       1       |      2       |      3       |            |          |            | |           |             |             |
            //                                     |            |             |            |            |  |           |       0       |      .       |              |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans           &kp EQUAL        &kp SLASH        &kp STAR         &kp MINUS  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp KP_NUMBER_0  &kp KP_DOT       &trans
            >;
        };
    };
};
